/* *@file:   myglwidget.h *@author: 缪庆瑞 *@date:   2016.10.10 *@brief:  3D图形类的头文件，继承自QGLWidget，重写三个方法即可 */#ifndef MYGLWIDGET_H#define MYGLWIDGET_H#include <QGLWidget>#include <QKeyEvent>#include <QTimerEvent>#include <QImage>#include <QMessageBox>class MyGLWidget : public QGLWidget{    Q_OBJECTpublic:    explicit MyGLWidget(QWidget *parent = 0);    void paintPlaneGL();//绘制平面图形    void paintPyramidGL();//绘制金字塔(四棱锥)    void paintCubeGL();//绘制立方体    void paintPrism6GL();//绘制六棱柱    void paintTextureCube();//绘制带纹理的立方体    void paintManyCubeGL();//利用显示列表绘制许多相同的立方体    void loadGLTextures();//加载纹理图片protected:    //重写以下三个方法    void initializeGL();//初始化opengl渲染的上下文环境    void resizeGL(int w,int h);//设置opengl视图端口投影，处理窗口大小变化    void paintGL();//实现3D绘图    void keyPressEvent(QKeyEvent *event);    void buildLists();//建立显示列表signals:public slots:private:    GLfloat depth;//z轴往里的深度，越深图形越小    GLfloat xRot,yRot,zRot;//绕轴旋转的角度    GLfloat speed;//绕轴旋转的速度    GLuint texture[3];//存放纹理    bool light;//定义是否使用光源    bool blend;//定义是否使用融合    bool fog;//定义是否使用雾    GLuint box,top;//存放显示列表的指针，这里定义两个 一个存放立方体的盒子，一个存放立方体的顶部};#endif // MYGLWIDGET_H